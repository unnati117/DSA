class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
if(!l1 && !l2)
  return NULL;
        
        ListNode* n=new ListNode;
        ListNode* h1=n;
        int r=0;
         int v;
        while(l1!=NULL && l2!=NULL)
        { v=l1->val+l2->val+r;
            if(v>9)
            {
                ListNode* node=new ListNode(v%10);
                h1->next=node;
                r=v/10;
                
            }
            else
            {
                ListNode* node=new ListNode(v);
                h1->next=node;
                r=0;
            }
            l1=l1->next;
            l2=l2->next;
            

            h1=h1->next;

        }
        while(l1!=NULL)
        { v=l1->val+r;
        
            if(v>9)
            {
                ListNode* node=new ListNode(v%10);
                h1->next=node;
                r=v/10;
              
                
            }
            else
            {
                ListNode* node=new ListNode(v);
                h1->next=node;
                r=0;
            }
           
            h1=h1->next;
            l1=l1->next;
        }
        while(l2!=NULL)
        { v=l2->val+r;
            if(v>9)
            {
                ListNode* node=new ListNode(v%10);
                h1->next=node;
                r=v/10;
                
            }
            else
            {
                ListNode* node=new ListNode(v);
                h1->next=node;
                r=0;
            }
            h1=h1->next;
            l2=l2->next;
        }
        while(r>0)
        { if(r>9)
           {
            ListNode* node=new ListNode(r%10);
                h1->next=node;
                r=r/10;
           }
           else
            {   ListNode* node=new ListNode(r);
                h1->next=node;
                r=0;
            }
            h1=h1->next;

        }
        return n->next;
        
    }
};
