Approach: int arr=[8,3,1,2] 
                   0,1,2,3
                   1,2,3,4
                   2,3,4,1
                   3,4,1,2
                   4,1,2,3

Suppose arr=[a,b,c,d,e]:  S0= 0a+1b+2c+3d+4e 
                          S1= 1a+2b+3c+4d+0e = s0+(a+b+c+d+e)-n*arr[n-i-1]
                          S2= 2a+3b+4c+0d+1e = s1+(a+b+c+d+e)-n*arr[n-i-1]
                          S3= 3a+4b+0c+1d+2e = s2+(a+b+c+d+e)-n*arr[n-i-1]
                          S4= 4a+0b+1c+2d+3e = s3+(a+b+c+d+e)-n*arr[n-i-1]



int max_sum(int A[],int N)
{
//Your code here

  int sum=0,s0=0;

      for(int i=0;i<N;++i)
      {
        s0+=i*A[i];
        sum+=A[i];
      }
      
      int max_sum=s0;
      
      for(int i=0;i<N-1;++i)
      {
          int s= s0+sum-N*A[N-i-1];
          max_sum=max(max_sum,s);
          s0=s;
          
      }
      
      return max_sum;
}
